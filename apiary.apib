FORMAT: 1A
HOST: http://frost.apiblueprint.org/

# Frost-API (日本語)

- Frost-APIはすべてのFrostクライアントがFrostのコンテンツを利用するためのAPIです。

- 権限を必要とするエンドポイントへのリクエストではヘッダーに `X-Application-Key` と `X-Access-Key` が付加されている必要があり、また、そのアプリケーションは指定された権限を持っている必要があります。


# Group IceAuth

## iceAuth/request [/iceAuth/request]

### リクエストキーを生成 [POST]

#### アクセスに必要な権限
- 不要

+ Request (application/json)

        {
            "applicationKey": "1-ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234.1"
        }

+ Response 200 (application/json)

        {
            "requestKey" : "1-ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234.1"
        }

## iceAuth/verificationKey [/iceAuth/verificationKey]

### 検証キーを取得 [GET]

#### アクセスに必要な権限
- `iceAuthHost`

+ Request (application/json)

        {
            "applicationKey" : "1-ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234.1"
            "requestKey" : "1-ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234.1"
        }

+ Response 200 (application/json)

        {
            "verificationKey" : "1-ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234.1"
        }

## iceAuth/authorize [/iceAuth/authorize]

### 各種キーによる認証とアクセスキーの取得 [POST]

#### アクセスに必要な権限
- 不要

+ Request (application/json)

        {
            "applicationKey": "1-ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234.1",
            "requestKey" : "1-ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234.1",
            "verificationKey" : "1-ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234.1"
        }

+ Response 200 (application/json)

        {
            "accessKey" : "1-ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234.1"
        }

# Group Applications

## applications [/applications]

+ Model (application/json)

        {
            "application": {
                "id": 3,
                "createdAt": 1234567890,
                "creatorId": 1,
                "name": "Test",
                "description": "テスト用のアプリケーションです。",
                "permissions": [
                    "accountRead",
                    "userRead",
                    "postRead",
                    "postWrite"
                ]
            }
        }

### アプリケーションの作成 [POST]

#### アクセスに必要な権限
- `applicationSpecial`

+ Request (application/json)

        {
            "name": "Test",
            "description": "テスト用のアプリケーションです。",
            "permissions": [
                "accountRead",
                "userRead",
                "postRead",
                "postWrite"
            ]
        }

+ Response 200
    [application][]

## applications/id [/applications/{id}]

+ Parameters
    + id: `3` (int, required) - アプリケーションID。

### アプリケーション情報を取得 [GET]

#### アクセスに必要な権限
- `application`

+ Response 200
    [application][]

## applications/id/applicationKey [/applications/{id}/applicationKey]

+ Parameters
    + id: `3` (int, required) - アプリケーションID。

+ Model (application/json)

        {
            "applicationKey": "1-ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234ABCD1234.1"
        }

### アプリケーションキーの生成 [POST]

#### アクセスに必要な権限
- `applicationSpecial`

+ Response 200
    [applications/id/applicationKey][]

### アプリケーションキーの取得 [GET]

#### アクセスに必要な権限
- `applicationSpecial`

+ Response 200
    [applications/id/applicationKey][]

# Group Users

## users/id [/users/{id}]

+ Parameters
    + id: `3` (int, required) - ユーザーID。

+ Model (application/json)

        {
            "id": 3,
            "createdAt": 1234567890,
            "screenName": "hoge",
            "name": "ほげほげ",
            "description": "ぴよぴよ"
        }

### ユーザー情報の取得 [GET]

#### アクセスに必要な権限
- `userRead`

+ Response 200
    [users/id][]

## users/id/timeline [/users/{id}/timeline]

+ Model (application/json)

        [
            {
                "id": 1,
                "createdAt": 1234567891,
                "userId": 1,
                "postType": "status",
                "text": "hogehoge"
            },
            {
                "id": 2,
                "createdAt": 1234567892,
                "userId": 1,
                "postType": "article",
                "title": "hoge",
                "description": "description text",
                "body": "hogehoge",
                "thumbnailUrl": "http://hogehoge.jp/thumbnail.png"
            },
            {
                "id": 3,
                "createdAt": 1234567893,
                "userId": 2,
                "postType": "linkPost",
                "targetPostId": 2
                "targetPost": {
                    "id": 2,
                    "createdAt": 1234567892,
                    "userId": 1,
                    "postType": "article",
                    "title": "hoge",
                    "description": "description text",
                    "body": "hogehoge",
                    "thumbnailUrl": "http://hogehoge.jp/thumbnail.png"
                }
            }
        ]

### 指定ユーザーの最新の投稿一覧を取得 [GET]

#### アクセスに必要な権限
- `userRead`

+ Request (application/json)

        {
            "filter": "all",
            "limit": 3
        }

+ Response 200
    [users/id/timeline][]

# Group Accounts

## account [/accounts]

### アカウントを作成 [POST]

#### アクセスに必要な権限
- `accountSpecial`

+ Request (application/json)

        {
            "screenName": "hoge",
            "password": "hogehoge",
            "name": "ほげほげ",
            "description": "ぴよぴよ"
        }

+ Response 200
    [users/id][]

# Group Posts

## posts/id [/posts/{id}]

+ Parameters
    + id: `1` (int) - ポストID。

### ポストを取得 [GET]

#### アクセスに必要な権限
- `postRead`

+ Response 200
    [posts/status][]

+ Response 200
    [posts/article][]

+ Response 200
    [posts/linkPost][]

## post/status [/posts/status]

+ Model (application/json)

        {
            "id": 1,
            "createdAt": 1234567891,
            "userId": 1,
            "postType": "status",
            "text": "hogehoge"
        }

### ステータスポストを作成 [POST]

#### アクセスに必要な権限
- `postWrite`

+ Request (application/json)

        {
            "text": "hogehoge"
        }

+ Response 200
    [post/status][]

## posts/article [/post/article]

+ Model (application/json)

        {
            "id": 2,
            "createdAt": 1234567892,
            "userId": 1,
            "postType": "article",
            "title": "hoge",
            "description": "description text",
            "body": "hogehoge",
            "thumbnailUrl": "http://hogehoge.jp/thumbnail.png"
        }

### アーティクルポストを作成 [POST]

#### アクセスに必要な権限
- `postWrite`

+ Request (application/json)

        {
            "title": "hoge",
            "description": "description text",
            "body": "hogehoge",
            "thumbnailUrl": "http://hogehoge.jp/thumbnail.png"
        }

+ Response 200
    [posts/article][]

## posts/linkPost [/posts/linkPost]

+ Model (application/json)

        {
            "id": 3,
            "createdAt": 1234567893,
            "userId": 2,
            "postType": "linkPost",
            "targetPostId": 2,
            "targetPost": {
                "id": 2,
                "createdAt": 1234567892,
                "userId": 1,
                "postType": "article",
                "title": "hoge",
                "description": "description text",
                "body": "hogehoge",
                "thumbnailUrl": "http://hogehoge.jp/thumbnail.png"
            }
        }

### リンクポストを作成 [POST]

#### アクセスに必要な権限
- `postWrite`

+ Request (application/json)

        {
            "targetPostId": 2
        }

+ Response 200
    [posts/linkPost][]